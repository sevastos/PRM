'use strict';

var exec = require('child_process').exec;
var spawn = require('child_process').spawn;

var proc = {};

/**
 * @param  {String}   cmd
 * @param  {Function} next @(error, stdout, stderr)
 */
proc.execSync = function (cmd, next){
  setTimeout(function() {
    exec(cmd, function (error, stdout, stderr) {
      if (error) {
        console.error(
          'Error while `' + cmd + '`.'+
          '\n\tError:', error,
          '\n\tStdErr:', stderr,
          '\n\tStdOut:', stdout
        );
      }
      next(stdout, error, stderr);
    });
  }, 100);
};

/**
 * gphoto2 shortcut
 * @param  {String}   cmd  gphoto options
 * @param  {Function} next
 * @param  {String?}  env  Optional environmental vars
 */
proc.gmd = function(cmd, next, env) {
  proc.execSync((env || '') + ' ' + 'gphoto2 --quiet ' + cmd, next);
};

/**
 * gphoto2 stream shortcut
 * @param  {String}   cmd  gphoto options
 * @param  {Function?}next Optional callback @(childProcess)
 * @param  {String?}  env  Optional environmental vars
 */
proc.gpipe = function(cmd, next, env) {
  if (env) {
    env += ' ';
  }
  var childProc = spawn('/bin/sh', ['-c', (env || '') + 'gphoto2 --quiet ' + cmd]);
  if (next) {
    next(childProc);
  }
  return childProc.stdout;
};


module.exports = proc;
